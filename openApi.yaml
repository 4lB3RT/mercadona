openapi: 3.0.0
info:
  title: Mercadona API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://0.0.0.0:8090/api
paths:
  /categories:
    get:
      summary: Returns a category collection.
      responses:
        '200':
          description: A JSON array of categories
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Categories'            
        '404':
          $ref: '#/components/responses/NotFound'
  /categories/{categoryId}:
    get:
      summary: Returns a category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: integer
          required: true
          description: Numeric ID of the category to get
          example: 12
      responses:
        '200':
          description: A JSON array of user names
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Category'            
        '404':
          $ref: '#/components/responses/NotFound'
  /products:
    get:
      summary: Returns a product collection.
      responses:
        '200':
          description: A JSON array of products
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Products'            
        '404':
          $ref: '#/components/responses/NotFound'
  /products/{productId}:
    get:
      summary: Returns a category
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Numeric ID of the product to get
          example: 4241
      responses:
        '200':
          description: A JSON array of user names
          content:
           application/json:
              schema:
                $ref: '#/components/schemas/Product'            
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Category:     
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: "CategoryName"
        category_id: 
          type: integer
          example: 1
        is_parent: 
          type: boolean
          example: true
        status: 
          type: string
          example: PROCESSED
        published: 
          type: boolean
          example: true
        order: 
          type: integer
          example: 102
    Categories: 
      type: array
      items: 
        $ref: '#/components/schemas/Category'
    Product:     
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: "ProductName"
        price:
          type: number
          example: 24.75
        brand: 
          type: string
          example: "hacendado"
        photo: 
          type: string
          example: "https://prod-mercadona.imgix.net/images/2b43f11cabb9fe773ae9b73a9caa2bf9.jpg?fit=crop&h=1600&w=1600"
        description: 
          type: string
          example: "Aceite de oliva 0,4ยบ Hacendado"
        categories: 
          $ref: '#/components/schemas/Categories'
    Products: 
      type: array
      items: 
        $ref: '#/components/schemas/Product'
  responses:
    NotFound:
      description: Entity not found

